{
   "name": "Contem_elemento_recursivo",
   "label": "Contém elemento recursivo",
   "tags": [
      "recursivo",
      "recursividade",
      "algoritmos elementares"
   ],
   "text": "\n## Busca Binária Recursiva\n\nImplemente um programa que leia uma sequência de inteiros distintos e um número N, então verifique se N \nestá na sequência lida.\n\n*Importante!* Seu programa deve ser recursivo e sequência não deve conter números repetidos.\n\n## Entrada\n\nSeu programa deve ler da entrada duas linhas: a primeira é linha contendo uma sequência \nde inteiros distintos separados por espaço, enquanto a segunda é um número N a \nser pesquisado na sequência.\n\n## Saída\n\nSeu programa deve imprimir o índice do número N. \nCaso não encontre N, deve imprimir -1. \n\n## Exemplo de execução\n\n    $ javac Solution.java; java Solution\n    3 5 8 10 12 18\n    10\n    3\n    $\n    \n    $ javac Solution.java; java Solution\n    3 5 8 10 12 18 20\n    99\n    -1\n    $\n\n\n\n\n## Restrições\n\nVocê não pode usar coleção ou método algum do Collections framework. Sua \nimplementação deve ser baseada em arrays.\n",
   "tests": [
      {
         "category": "public",
         "input": "3 5 8 10 12 18 20\n99\n",
         "output": "-1\n"
      },
      {
         "category": "public",
         "input": "3 5 8 10 12 18\n3\n",
         "output": "0\n"
      },
      {
         "input": "1 2 3\n2\n",
         "output": "1\n"
      },
      {
         "input": "0 1 2 3 4 5 6 7 8 9 10\n10\n",
         "output": "10\n"
      },
      {
         "input": "0 1 2 3 4 5 6 7 8 9 10\n5\n",
         "output": "5\n"
      },
      {
         "input": "0 1 2 3 4 5 6 7 8 9 10\n11\n",
         "output": "-1\n"
      },
      {
         "input": "0 1 2 3 4 5 6 7 8 9 10\n4\n",
         "output": "4\n"
      }
   ]
}